generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id            String         @id @default(cuid())
  email         String         @unique
  password      String
  name          String?
  role          UserRole       @default(CLIENT)
  businessId    String? // Nếu là admin/employee thì thuộc về 1 business
  business      Business?      @relation(fields: [businessId], references: [id])
  conversations Conversation[]
  messages      Message[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
}

model Business {
  id            String         @id @default(cuid())
  name          String
  users         User[] // Danh sách admin/employee thuộc business này
  conversations Conversation[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?
}

model Conversation {
  id         String     @id @default(cuid())
  business   Business   @relation(fields: [businessId], references: [id])
  businessId String
  guestId    String?
  clientType ClientType
  user       User?      @relation(fields: [userId], references: [id])
  userId     String?
  messages   Message[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  deletedAt  DateTime?

  @@index([businessId])
}

model Message {
  id             String       @id @default(cuid())
  conversationId String
  content        String
  userId         String? // Nếu là ADMIN gửi thì có userId
  guestId        String? // Nếu là CLIENT gửi thì có guestId
  deletedAt      DateTime?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  senderType     SenderType
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  user           User?        @relation(fields: [userId], references: [id])

  @@index([conversationId])
  @@index([createdAt])
}

enum SenderType {
  CLIENT
  ADMIN
}

enum ClientType {
  AUTHENTICATED
  ANONYMOUS
}

enum UserRole {
  CLIENT
  ADMIN
}
